{"version":3,"sources":["TopNavigator.js","serviceWorker.js","EchelonInput.js","StaticData.js","DistributionTable.js","EditableTables.js","index.js"],"names":["TopNavigator","react_default","a","createElement","className","href","src","window","location","origin","alt","Component","Boolean","hostname","match","EchelonInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","echelon","_this2","event","parseInt","nativeEvent","data","isNaN","setState","role","id","type","onChange","onInputChange","bind","placeholder","ORGANIZATIONS","DistributionTable","locked","title","selected","count","options","rows","orgSelector","onSelectChange","assertThisInitialized","map","org","key","value","countInput","onCountChange","buttonClasses","addRowButton","onClick","addRow","tbodyRef","React","createRef","target","newRow","organization","Math","max","toConsumableArray","concat","idx","splice","_this3","stopPropagation","preventDefault","row","push","_this4","handleRowClick","bgcolor","onContextMenu","colSpan","removeRow","ref","getInputRow","renderRows","EditableTables","rowsData","home","priority","island","center","general","TABLE_NAMES","NUM_TABLES","echelonRef","tableRefs","i","current","csv","length","collectDataInCsv","hiddenElement","document","encodeURI","download","click","lines","split","catIdx","entryIdx","e","persist","reader","FileReader","self","onload","parseInputData","result","readAsText","files","tables","src_DistributionTable_0","src_EchelonInput","createTables","flipLockedState","outputData","inputData","accept","htmlFor","ReactDOM","render","src_TopNavigator","getElementById","src_EditableTables_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6885db97.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './bootstrap.min.css';\n\nclass TopNavigator extends Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n          <br/>\n          <a href=\"https://www.hwwtc.mohw.gov.tw/\">\n            <img src={window.location.origin + '/react-gh-pages/img/nav_top.png'} alt=\"Top Navigator\"></img>\n          </a>\n          <br/>\n      </div>\n    );\n  }\n}\n\nexport default TopNavigator;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './bootstrap.min.css';\n\nclass EchelonInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      echelon: 200\n    };\n  }\n\n  onInputChange() {\n    return event => {\n      const echelon = parseInt(event.nativeEvent.data);\n      if (!isNaN(echelon)) {\n        this.setState({ echelon: echelon });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n        <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n          <h3>梯次</h3>\n        </main>\n        <div className=\"input-group mb-3 col-md-8 mx-auto\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"basic-addon1\">梯次</span>\n          </div>\n          <input type=\"text\" onChange={this.onInputChange().bind(this)} className=\"form-control\" placeholder={this.state.echelon}/>\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\">T</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EchelonInput;\n","const ORGANIZATIONS = [\n    '衛生福利部社會及家庭署北部辦公室',\n    '臺北市政府社會局',\n    '新北市政府社會局',\n    '臺中市政府社會局',\n    '臺南市政府社會局',\n    '高雄市政府社會局',\n    '桃園市政府社會局',\n    '宜蘭縣政府',\n    '新竹縣政府',\n    '苗栗縣政府',\n    '彰化縣政府',\n    '南投縣政府',\n    '雲林縣政府',\n    '嘉義縣政府',\n    '屏東縣政府',\n    '花蓮縣政府',\n    '臺東縣政府',\n    '澎湖縣政府',\n    '基隆市政府',\n    '新竹市政府',\n    '嘉義市政府',\n    '金門縣政府',\n    '連江縣政府',\n    '衛生福利部北區老人之家',\n    '衛生福利部北區老人之家頤苑自費安養中心',\n    '衛生福利部中區老人之家',\n    '衛生福利部南區老人之家',\n    '衛生福利部東區老人之家',\n    '衛生福利部澎湖老人之家',\n    '衛生福利部北區兒童之家',\n    '衛生福利部中區兒童之家',\n    '衛生福利部南區兒童之家',\n    '衛生福利部少年之家',\n    '衛生福利部彰化老人養護中心',\n    '衛生福利部南投啟智教養院',\n    '衛生福利部雲林教養院',\n    '衛生福利部社會及家庭署宜蘭教養院',\n    '衛生福利部臺南教養院',\n    '衛生福利部暴力及性侵害防治委員會',\n    '衛生福利部保護服務司',\n    '衛生福利部社會保險司',\n    '衛生福利部社會救助及社工司',\n    '衛生福利部社會救助及社工司中部辦公室',\n    '衛生福利部社會及家庭署中部辦公室',\n    '衛生福利部長期照顧司籌備辦公室',\n    '衛生福利部國民年金監理會',\n];\n\nexport { ORGANIZATIONS };","import React, { Component } from 'react';\nimport './bootstrap.min.css';\nimport './DistributionTable.css';\nimport { ORGANIZATIONS } from './StaticData';\n\nclass DistributionTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locked: props.locked,\n            title: props.title,\n            selected: ORGANIZATIONS[0],\n            count: 0,\n            options: ORGANIZATIONS,\n            rows: []\n        };\n\n        this.orgSelector = (\n            <select onChange={this.onSelectChange.bind(this)}>\n                {ORGANIZATIONS.map(org => <option key={org} value={org}>{org}</option>)}\n            </select>\n        );\n\n        this.countInput = \n            <input onChange={this.onCountChange.bind(this)} type=\"text\" className=\"form-control\" placeholder=\"1\"/>;\n        this.buttonClasses = \"form-control btn btn-outline-secondary\";\n        this.addRowButton = (\n            <button onClick={this.addRow.bind(this)} className={this.buttonClasses} type=\"button\">\n                增加單位\n            </button>\n        );\n\n        this.tbodyRef = React.createRef();\n    }\n\n    onSelectChange(event) {\n        this.setState({ selected: event.target.value });\n    }\n    onCountChange(event) {\n        let count = parseInt(event.target.value);\n        if (isNaN(count)) {\n            count = 1;\n        }\n        this.setState({ count: count });\n    }\n\n    addRow() {\n        const newRow = {\n            organization: this.state.selected,\n            count: Math.max(this.state.count, 1)\n        };\n        this.setState({\n            rows: [ ...this.state.rows, newRow ]\n        });\n    }\n\n    removeRow(idx) {\n        return () => {\n            const rows = [...this.state.rows];\n            rows.splice(idx, 1);\n            this.setState({ rows })\n        };\n    }\n\n    handleRowClick(idx) {\n        return (event) => {\n            if (event.target.type === 'button') return;\n            if (event.type === 'contextmenu') {\n                event.stopPropagation();\n                event.preventDefault();\n                const rows = [...this.state.rows];\n                rows[idx].count += 1;\n                this.setState({rows});\n            } else if (event.type === 'click') {\n                const rows = [...this.state.rows];\n                const row = rows[idx];\n                if (row.count > 0) {\n                    row.count = row.count - 1;\n                    if (row.count === 0) {\n                        rows.splice(idx, 1);\n                        rows.push(row);\n                    }\n                    this.setState({rows});\n                }\n            }\n        };\n    }\n\n    renderRows() {\n        return this.state.rows.map((props, idx) => {\n            if (!this.state.locked) {\n                return (\n                    <tr key={idx}\n                        onClick={this.handleRowClick(idx).bind(this)}\n                        bgcolor={props.count > 0 ? \"#ffffff\": \"#ffaaaa\"}\n                        onContextMenu={this.handleRowClick(idx).bind(this)}>\n                        <td>\n                            <button className={this.buttonClasses} onClick={this.removeRow(idx).bind(this)} type=\"button\">\n                                移除單位\n                            </button>\n                        </td>\n                        <td>\n                            {props.organization}\n                        </td>\n                        <td>{props.count}</td>\n                    </tr>\n                );\n            }\n            return (\n                <tr key={idx}\n                    onClick={this.handleRowClick(idx).bind(this)}\n                    bgcolor={props.count > 0 ? \"#ffffff\": \"#ffaaaa\"}\n                    onContextMenu={this.handleRowClick(idx).bind(this)}>\n                    <td colSpan=\"2\">\n                        {props.organization}\n                    </td>\n                    <td>{props.count}</td>\n                </tr>\n            );\n        });\n    }\n\n    outputRows() {\n        return this.state.rows;\n    }\n\n    getInputRow() {\n        if (this.state.locked) return;\n        return (\n            <tr id=\"inputRow\">\n                <td>\n                    {this.addRowButton}\n                </td>\n                <td>\n                    {this.orgSelector}\n                </td>\n                <td>\n                    {this.countInput}\n                </td>\n            </tr>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"table-responsive col-md-12\">\n                <table className=\"table table-bordered table-hover table-sm\">\n                    <thead>\n                        <tr>\n                            <th colSpan=\"2\" className=\"unit\">分發單位</th>\n                            <th colSpan=\"2\" className=\"count\">剩餘名額</th>\n                        </tr>\n                    </thead>\n                    <tbody ref={this.tbodyRef}>\n                        {this.getInputRow()}\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default DistributionTable;","import React, { Component } from 'react';\nimport EchelonInput from './EchelonInput';\nimport DistributionTable from './DistributionTable';\n\nimport './EditableTables.css';\n\nclass EditableTables extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locked: false,\n            rowsData: {\n                home: [],\n                priority: [],\n                island: [],\n                center: [],\n                general: []\n            }\n        };\n        this.TABLE_NAMES = [\n            \"家庭因素（返家住宿）\",\n            \"優先分發戶籍地或附近服役（集中住宿）\",\n            \"設籍或自願前往離島服役\",\n            \"衛生福利人員訓練中心\",\n            \"一般資格者\"\n        ];\n        this.NUM_TABLES = 5;\n\n        this.echelonRef = React.createRef();\n        this.tableRefs = [];\n        for (let i = 0; i < this.NUM_TABLES; ++i) {\n            this.tableRefs.push(React.createRef());\n        }\n    }\n\n    flipLockedState() {\n        this.setState({ locked : !this.state.locked });\n        for (let i = 0; i < this.NUM_TABLES; ++i) {\n            this.tableRefs[0].current.setState({locked: this.state.locked});\n        }\n    }\n\n    /****************** Output data functionalities ******************/\n    /* Collect the data from the references to store in a csv string. */\n    collectDataInCsv() {\n        let csv = \"梯次,\" + this.echelonRef.current.state.echelon + \"\\n\";\n        for (let i = 0; i < this.NUM_TABLES; ++i) {\n            csv += this.TABLE_NAMES[i] + \",\" + this.tableRefs[i].current.state.rows.length + \"\\n\";\n            for (let org = 0; org < this.tableRefs[i].current.state.rows.length; ++org) {\n                const row = this.tableRefs[i].current.state.rows[org];\n                csv += row.organization + \",\" + row.count + \"\\n\";\n            }\n        }\n        return csv;\n    }\n\n    /* Output the csv string data as a csv file and download the file. */\n    outputData() {\n        return () => {\n            const csv = this.collectDataInCsv();\n            var hiddenElement = document.createElement('a');\n            hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n            hiddenElement.target = '_blank';\n            hiddenElement.download = '員額表網路版.csv';\n            hiddenElement.click();\n        };\n    }\n\n    /****************** Input data functionalities ******************/\n    /* Parse the input csv string data as different tables. */\n    parseInputData(csv) {\n        const lines = csv.split(\"\\n\");\n        let i;\n        for (i = 0; i < lines.length; ++i) {\n            lines[i] =  lines[i].split(\",\");\n        }\n        const echelon = lines[0][1];\n        this.echelonRef.current.setState({echelon: parseInt(echelon)});\n\n        i = 1;\n        for (let catIdx = 0; catIdx < this.NUM_TABLES; ++catIdx) {\n            let rows = [];\n            for (let entryIdx = 1; entryIdx <= parseInt(lines[i][1]); ++entryIdx) {\n                rows.push({\n                    organization: lines[i + entryIdx][0],\n                    count: parseInt(lines[i + entryIdx][1])\n                });\n            }\n            this.tableRefs[catIdx].current.setState({rows});\n            i += parseInt(lines[i][1]) + 1;\n        }\n    }\n\n    /* Handles the uploaded csv file. */\n    inputData() {\n        return (e) => {\n            e.persist();\n            var reader = new FileReader();\n            const self = this;\n            reader.onload = function(e) {\n                self.parseInputData(reader.result);\n            }\n            reader.readAsText(e.target.files[0]);\n        };\n    }\n\n    /* Creates a number of DistributionTable entries with correct headers and refs. */\n    createTables() {\n        let tables = [];\n        for (let i = 0; i < this.NUM_TABLES; ++i) {\n            tables.push((\n                <div key={this.TABLE_NAMES[i] + i} className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                    <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                        <h3>{this.TABLE_NAMES[i]}</h3>\n                    </main>\n                    <div>\n                        <DistributionTable ref={this.tableRefs[i]}/>\n                    </div>\n                </div>\n            ))\n        }\n        return tables;\n    }    \n\n    render() {\n        return (\n            <div>\n                <EchelonInput ref={this.echelonRef}/>\n                {this.createTables()}\n                <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                    <button type=\"button\" onClick={this.flipLockedState.bind(this)} className=\"form-control btn btn-outline-secondary col-md-4\">\n                        鎖定數目\n                    </button>\n                    <button type=\"button\" onClick={this.outputData().bind(this)} className=\"form-control btn btn-outline-secondary col-md-4\">\n                        下載資料\n                    </button>\n                    <div className=\"form-control btn btn-outline-secondary col-md-4 custom-file\">\n                        <input type=\"file\"\n                               onChange={this.inputData().bind(this)}\n                               className=\"custom-file-input minimized\"\n                               accept=\".csv\"\n                               id=\"csvFile\"/>\n                        <label className=\"\" htmlFor=\"csvFile\">上傳CSV檔案</label>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EditableTables;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TopNavigator from './TopNavigator';\nimport * as serviceWorker from './serviceWorker';\nimport EditableTables from './EditableTables';\n\nReactDOM.render(<TopNavigator />, document.getElementById('top_navigator'));\nReactDOM.render(<EditableTables />, document.getElementById('editable_tables'));\n// ReactDOM.render(<EchelonInput />, document.getElementById('echelon_input'));\n// ReactDOM.render(\n//  (\n//         <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//             <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//                 <h3>家庭因素（返家住宿）</h3>\n//             </main>\n//             <div>\n//                 <DistributionTable />\n//             </div>\n//         </div>\n//     ),\n//  document.getElementById('home_coming'));\n// ReactDOM.render(\n//  (\n//         <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//             <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//                 <h3>優先分發戶籍地或附近服役（集中住宿）</h3>\n//             </main>\n//             <div>\n//                 <DistributionTable />\n//             </div>\n//         </div>\n//     ),\n//  document.getElementById('priority_distribution'));\n// ReactDOM.render(\n//  (\n//         <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//             <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//                 <h3>設籍或自願前往離島服役</h3>\n//             </main>\n//             <div>\n//                 <DistributionTable />\n//             </div>\n//         </div>\n//     ),\n//  document.getElementById('remote_island'));\n// ReactDOM.render(\n//  (\n//         <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//             <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//                 <h3>衛生福利人員訓練中心</h3>\n//             </main>\n//             <div>\n//                 <DistributionTable />\n//             </div>\n//         </div>\n//     ),\n//  document.getElementById('training_center'));\n// ReactDOM.render(\n//  (\n//         <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//             <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n//                 <h3>一般資格者</h3>\n//             </main>\n//             <div>\n//                 <DistributionTable />\n//             </div>\n//         </div>\n//     ),\n//  document.getElementById('general'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}