{"version":3,"sources":["TopNavigator.js","EchelonInput.js","StaticData.js","DistributionTable.js","serviceWorker.js","index.js"],"names":["TopNavigator","react_default","a","createElement","className","href","src","window","location","origin","alt","Component","EchelonInput","role","id","type","placeholder","ORGANIZATIONS","DistributionTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","selected","count","options","rows","orgSelector","onChange","onSelectChange","bind","assertThisInitialized","map","org","key","value","countInput","onCountChange","buttonClasses","addRowButton","onClick","addRow","tbodyRef","React","createRef","event","setState","target","newRow","organization","toConsumableArray","concat","idx","_this2","splice","_this3","removeRow","colSpan","ref","renderRows","Boolean","hostname","match","ReactDOM","render","src_TopNavigator","document","getElementById","src_EchelonInput","src_DistributionTable_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28355874.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './bootstrap.min.css';\n\nclass TopNavigator extends Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n          <br/>\n          <a href=\"https://www.hwwtc.mohw.gov.tw/\">\n            <img src={window.location.origin + '/img/nav_top.png'} alt=\"Top Navigator\"></img>\n          </a>\n          <br/>\n      </div>\n    );\n  }\n}\n\nexport default TopNavigator;\n","import React, { Component } from 'react';\nimport './bootstrap.min.css';\n\nclass EchelonInput extends Component {\n  render() {\n    return (\n      <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n        <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n          <h3>梯次</h3>\n        </main>\n        <div className=\"input-group mb-3 col-md-10 mx-auto\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"basic-addon1\">梯次</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" placeholder=\"195T\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EchelonInput;\n","const ORGANIZATIONS = [\n    '衛生福利部社會及家庭署北部辦公室',\n    '臺北市政府社會局',\n    '新北市政府社會局',\n    '臺中市政府社會局',\n    '臺南市政府社會局',\n    '高雄市政府社會局',\n    '桃園市政府社會局',\n    '宜蘭縣政府',\n    '新竹縣政府',\n    '苗栗縣政府',\n    '彰化縣政府',\n    '南投縣政府',\n    '雲林縣政府',\n    '嘉義縣政府',\n    '屏東縣政府',\n    '花蓮縣政府',\n    '臺東縣政府',\n    '澎湖縣政府',\n    '基隆市政府',\n    '新竹市政府',\n    '嘉義市政府',\n    '金門縣政府',\n    '連江縣政府',\n    '衛生福利部北區老人之家',\n    '衛生福利部北區老人之家頤苑自費安養中心',\n    '衛生福利部中區老人之家',\n    '衛生福利部南區老人之家',\n    '衛生福利部東區老人之家',\n    '衛生福利部澎湖老人之家',\n    '衛生福利部北區兒童之家',\n    '衛生福利部中區兒童之家',\n    '衛生福利部南區兒童之家',\n    '衛生福利部少年之家',\n    '衛生福利部彰化老人養護中心',\n    '衛生福利部南投啟智教養院',\n    '衛生福利部雲林教養院',\n    '衛生福利部社會及家庭署宜蘭教養院',\n    '衛生福利部臺南教養院',\n    '衛生福利部暴力及性侵害防治委員會',\n    '衛生福利部保護服務司',\n    '衛生福利部社會保險司',\n    '衛生福利部社會救助及社工司',\n    '衛生福利部社會救助及社工司中部辦公室',\n    '衛生福利部社會及家庭署中部辦公室',\n    '衛生福利部長期照顧司籌備辦公室',\n    '衛生福利部國民年金監理會',\n];\n\nexport { ORGANIZATIONS };","import React, { Component } from 'react';\nimport './bootstrap.min.css';\nimport './DistributionTable.css';\nimport { ORGANIZATIONS } from './StaticData';\n\nclass DistributionTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title,\n            selected: ORGANIZATIONS[0],\n            count: 0,\n            options: ORGANIZATIONS,\n            rows: []\n        };\n\n        this.orgSelector = (\n            <select className=\"col-md-8\" onChange={this.onSelectChange.bind(this)}>\n                {ORGANIZATIONS.map(org => <option key={org} value={org}>{org}</option>)}\n            </select>\n        );\n\n        this.countInput = \n            <input onChange={this.onCountChange.bind(this)} type=\"text\" className=\"form-control\" placeholder=\"名額\"/>;\n        this.buttonClasses = \"form-control btn btn-outline-secondary\";\n        this.addRowButton = (\n            <button onClick={this.addRow.bind(this)} className={this.buttonClasses} type=\"button\">\n                增加單位\n            </button>\n        );\n\n        this.tbodyRef = React.createRef();\n    }\n\n    onSelectChange(event) {\n        this.setState({ selected: event.target.value });\n    }\n    onCountChange(event) {\n        this.setState({ count: event.target.value});\n    }\n\n    addRow() {\n        const newRow = {\n            organization: this.state.selected,\n            count: this.state.count\n        };\n        this.setState({\n            rows: [ ...this.state.rows, newRow ]\n        });\n    }\n\n    removeRow(idx) {\n        return () => {\n            const rows = [...this.state.rows]\n            rows.splice(idx, 1)\n            this.setState({ rows })\n        };\n    }\n\n    renderRows() {\n        return this.state.rows.map((props, idx) => {\n            return (\n                <tr key={idx}>\n                    <td>\n                        <button className={this.buttonClasses} onClick={this.removeRow(idx).bind(this)} type=\"button\">\n                            移除單位\n                        </button>\n                    </td>\n                    <td>\n                        {props.organization}\n                    </td>\n                    <td>{props.count}</td>\n                </tr>\n            );\n        });\n    }\n\n    outputRows() {\n        return this.state.rows;\n    }\n\n    render() {\n        return (\n            <div className=\"table-responsive col-md-12\">\n                <table className=\"table table-bordered table-hover table-sm\">\n                    <thead>\n                        <tr>\n                            <th colSpan=\"2\" className=\"unit\">分發單位</th>\n                            <th colSpan=\"2\" className=\"count\">剩餘名額</th>\n                        </tr>\n                    </thead>\n                    <tbody ref={this.tbodyRef}>\n                        <tr id=\"inputRow\">\n                            <td>\n                                {this.addRowButton}\n                            </td>\n                            <td>\n                                {this.orgSelector}\n                            </td>\n                            <td>\n                                {this.countInput}\n                            </td>\n                        </tr>\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default DistributionTable;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TopNavigator from './TopNavigator';\nimport EchelonInput from './EchelonInput';\nimport DistributionTable from './DistributionTable';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TopNavigator />, document.getElementById('top_navigator'));\nReactDOM.render(<EchelonInput />, document.getElementById('echelon_input'));\nReactDOM.render(\n\t(\n\n        <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n            <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                <h3>家庭因素（返家住宿）</h3>\n            </main>\n            <div>\n                <DistributionTable />\n            </div>\n        </div>\n    ),\n\tdocument.getElementById('home_coming'));\nReactDOM.render(\n\t(\n\n        <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n            <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                <h3>優先分發戶籍地或附近服役（集中住宿）</h3>\n            </main>\n            <div>\n                <DistributionTable />\n            </div>\n        </div>\n    ),\n\tdocument.getElementById('priority_distribution'));\nReactDOM.render(\n\t(\n\n        <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n            <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                <h3>設籍或自願前往離島服役</h3>\n            </main>\n            <div>\n                <DistributionTable />\n            </div>\n        </div>\n    ),\n\tdocument.getElementById('remote_island'));\nReactDOM.render(\n\t(\n\n        <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n            <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                <h3>衛生福利人員訓練中心</h3>\n            </main>\n            <div>\n                <DistributionTable />\n            </div>\n        </div>\n    ),\n\tdocument.getElementById('training_center'));\nReactDOM.render(\n\t(\n\n        <div className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n            <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\n                <h3>一般資格者</h3>\n            </main>\n            <div>\n                <DistributionTable />\n            </div>\n        </div>\n    ),\n\tdocument.getElementById('general'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}